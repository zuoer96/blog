import{_ as a,o as e,c as s,Q as t}from"./chunks/framework.027d2da0.js";const i="/images/image-20230915145704953.png",n="/images/image-20230915145716495.png",p="/images/image-20230915145730083.png",l="/images/image-20230915145734813.png",r="/images/image-20230915145740416.png",o="/images/image-20230915145751419.png",c="/images/image-20230915145759045.png",g="/images/image-20230915145817081.png",m="/images/image-20230915145823068.png",h="/images/image-20230915145830390.png",_="/images/image-20230915145900902.png",S=JSON.parse('{"title":"Gitee","description":"","frontmatter":{"typora-root-url":"./..\\\\..\\\\..\\\\..\\\\public"},"headers":[],"relativePath":"tools-vcs-gitee.md","filePath":"docs/06_工具/02_版本控制/01_GIT/03_Gitee.md"}'),d={name:"tools-vcs-gitee.md"},u=t('<h1 id="gitee" tabindex="-1">Gitee <a class="header-anchor" href="#gitee" aria-label="Permalink to &quot;Gitee&quot;">​</a></h1><h2 id="基于git实现版本控制" tabindex="-1">基于Git实现版本控制 <a class="header-anchor" href="#基于git实现版本控制" aria-label="Permalink to &quot;基于Git实现版本控制&quot;">​</a></h2><p>之前JavaEE项目开发更多使用 SVN版本控制工具，SVN必须基于远程仓库进行版本控制，而Git是分布式版本工具（除了具有远程仓库外，还具有本地仓库 可以在离线情况下进行版本控制，无需上网 ）</p><p><img src="'+i+'" alt="image-20230915145704953"></p><p><img src="'+n+'" alt="image-20230915145716495"></p><p>网址： <a href="https://git.oschina.net/" target="_blank" rel="noreferrer">https://git.oschina.net/</a></p><p><img src="'+p+'" alt="image-20230915145730083"></p><h2 id="_1-用户注册" tabindex="-1">1：用户注册 <a class="header-anchor" href="#_1-用户注册" aria-label="Permalink to &quot;1：用户注册&quot;">​</a></h2><p><img src="'+l+'" alt="image-20230915145734813"></p><h2 id="_2-用户登录-创建一个新的项目-添加开发者" tabindex="-1">2：用户登录,创建一个新的项目,添加开发者 <a class="header-anchor" href="#_2-用户登录-创建一个新的项目-添加开发者" aria-label="Permalink to &quot;2：用户登录,创建一个新的项目,添加开发者&quot;">​</a></h2><p><img src="'+r+'" alt="image-20230915145740416"></p><h2 id="_3-创建项目-相当于仓库" tabindex="-1">3：创建项目（相当于仓库） <a class="header-anchor" href="#_3-创建项目-相当于仓库" aria-label="Permalink to &quot;3：创建项目（相当于仓库）&quot;">​</a></h2><p><img src="'+o+'" alt="image-20230915145751419"></p><p>跳转到：</p><p><img src="'+c+'" alt="image-20230915145759045"></p><p>在线仓库访问地址：<a href="https://gitee.com/szitcast/mytest-64.git" target="_blank" rel="noreferrer">https://gitee.com/szitcast/mytest-64.git</a></p><h2 id="_4-将其它开发者加入到项目中" tabindex="-1">4：将其它开发者加入到项目中 <a class="header-anchor" href="#_4-将其它开发者加入到项目中" aria-label="Permalink to &quot;4：将其它开发者加入到项目中&quot;">​</a></h2><p><img src="'+g+'" alt="image-20230915145817081"></p><p>这里注意：添加项目成员的时候，该成员必须在“码云”上注册</p><p><img src="'+m+'" alt="image-20230915145823068"></p><h2 id="_5-创建工程-先导入到本地仓库" tabindex="-1">5：创建工程，先导入到本地仓库 <a class="header-anchor" href="#_5-创建工程-先导入到本地仓库" aria-label="Permalink to &quot;5：创建工程，先导入到本地仓库&quot;">​</a></h2><p><img src="'+h+'" alt="image-20230915145830390"></p><p>创建本地仓库</p><p>提交到本地仓库。</p><h2 id="_6-推送到远程仓库-注意" tabindex="-1">6：推送到远程仓库（注意） <a class="header-anchor" href="#_6-推送到远程仓库-注意" aria-label="Permalink to &quot;6：推送到远程仓库（注意）&quot;">​</a></h2><p>配置URL</p><h2 id="_7-克隆项目" tabindex="-1">7：克隆项目 <a class="header-anchor" href="#_7-克隆项目" aria-label="Permalink to &quot;7：克隆项目&quot;">​</a></h2><p>配置URL，配置Parent Directory</p><h2 id="_8-打开克隆的项目" tabindex="-1">8：打开克隆的项目 <a class="header-anchor" href="#_8-打开克隆的项目" aria-label="Permalink to &quot;8：打开克隆的项目&quot;">​</a></h2><h2 id="_9-测试执行push和pull" tabindex="-1">9：测试执行push和pull <a class="header-anchor" href="#_9-测试执行push和pull" aria-label="Permalink to &quot;9：测试执行push和pull&quot;">​</a></h2><blockquote><p>注意：<strong>idea提交代码到码云报Push to origin/master was rejected</strong></p></blockquote><p>错误：</p><p><img src="'+_+`" alt="image-20230915145900902"></p><p>1.切换到自己项目所在的目录，右键选择GIT BASH Here，Idea中可使用Alt+F12</p><p>2.在terminl窗口中依次输入命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">git pull</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">git pull origin master</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">git pull origin master --allow-unrelated-histories</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">git pull</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">git pull origin master</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">git pull origin master --allow-unrelated-histories</span></span></code></pre></div><p>3.在idea中重新push自己的项目，成功！！！</p>`,37),b=[u];function q(f,k,P,y,x,v){return e(),s("div",null,b)}const T=a(d,[["render",q]]);export{S as __pageData,T as default};
