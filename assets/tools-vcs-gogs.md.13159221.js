import{_ as s,o as a,c as p,Q as o}from"./chunks/framework.027d2da0.js";const t="/images/image-20230915101434800.png",e="/images/image-20230915101438321.png",n="/images/image-20230915101454592.png",l="/images/image-20230915101503838.png",i="/images/image-20230915101514617.png",r="/images/image-20230915101523253.png",g="/images/image-20230915101531793.png",c="/images/image-20230915101540244.png",m="/images/image-20230915101553732.png",h="/images/image-20230915101600674.png",d="/images/image-20230915101609086.png",y="/images/image-20230915101620248.png",_="/images/image-20230915101628631.png",u="/images/image-20230915101637558.png",E="/images/image-20230915101648404.png",b="/images/image-20230915101656905.png",v="/images/image-20230915101704871.png",q="/images/image-20230915101713472.png",k="/images/image-20230915101722937.png",F="/images/image-20230915101730480.png",S="/images/image-20230915101737843.png",f="/images/image-20230915101753168.png",C="/images/image-20230915101806427.png",P="/images/image-20230915101813384.png",x="/images/image-20230915101823380.png",H="/images/image-20230915101830430.png",G="/images/image-20230915101836194.png",B="/images/image-20230915101844415.png",A="/images/image-20230915101852574.png",D="/images/image-20230915101859061.png",T="/images/image-20230915101908052.png",w="/images/image-20230915101916699.png",$="/images/image-20230915101922898.png",z="/images/image-20230915101930512.png",L="/images/image-20230915101935742.png",I="/images/image-20230915101941760.png",N="/images/image-20230915101947660.png",V="/images/image-20230915101954601.png",O="/images/image-20230915102002217.png",J="/images/image-20230915102011612.png",as=JSON.parse('{"title":"Gogs","description":"","frontmatter":{"typora-root-url":"./..\\\\..\\\\..\\\\..\\\\public"},"headers":[],"relativePath":"tools-vcs-gogs.md","filePath":"docs/06_工具/02_版本控制/01_GIT/02_Gogs.md"}'),K={name:"tools-vcs-gogs.md"},Q=o('<h1 id="gogs" tabindex="-1">Gogs <a class="header-anchor" href="#gogs" aria-label="Permalink to &quot;Gogs&quot;">​</a></h1><p>​ 到目前为止，我们已经学会了如何在本机利用git进行文件版本管理，但是如果要想进行多人协作，我们就必须使用远程仓库。将本地仓库的数据同步到远程仓库，实现多人协作开发。</p><p>​ 目前比较热门的代码托管社区：GitHub，网址：<a href="https://gtihub.com" target="_blank" rel="noreferrer">https://gtihub.com</a> ,提供了免费的远程git仓库功能。不过网速不是特别流畅。 在国内，有很多的公司使用oschina提供的git服务：码云, <a href="https://gitee.com" target="_blank" rel="noreferrer">https://gitee.com</a> ，当然，我们也可以自己来搭建远程仓库。目前学校服务器中搭建了一个git私服，其地址为：<a href="http://192.168.50.33:10080" target="_blank" rel="noreferrer">http://192.168.50.33:10080</a></p><h2 id="搭建远程仓库服务" tabindex="-1">搭建远程仓库服务 <a class="header-anchor" href="#搭建远程仓库服务" aria-label="Permalink to &quot;搭建远程仓库服务&quot;">​</a></h2><p>​ GitHub是世界最大的代码托管库，但是如果你想要设置私人仓库，是要收费的。而且速度不太好。因此一般公司都会自己搭建Git私服。 现在主流的私服架构有：GitLab、Gogs等</p><p>​ 开源中国的码云就是使用GitLab搭建的，我们学校的私服使用的是Gogs，搭建起来比GitLab要简单的多，所以我们使用Gogs来搭建。</p><h3 id="安装mysql" tabindex="-1"><strong>安装mysql</strong> <a class="header-anchor" href="#安装mysql" aria-label="Permalink to &quot;**安装mysql**&quot;">​</a></h3><p>gogs底层的管理需要以来数据库，可以是mysql，也可以是其他一些常用数据库，推荐mysql</p><p>略，以前学过</p><h3 id="安装git" tabindex="-1"><strong>安装git</strong> <a class="header-anchor" href="#安装git" aria-label="Permalink to &quot;**安装git**&quot;">​</a></h3><p>用命令：yum install -y git 安装</p><p><img src="'+t+'" alt="image-20230915101434800"></p><p><img src="'+e+'" alt="image-20230915101438321"></p><h3 id="安装gogs" tabindex="-1">安装gogs <a class="header-anchor" href="#安装gogs" aria-label="Permalink to &quot;安装gogs&quot;">​</a></h3><p><strong>1）</strong> <strong>创建git用户</strong></p><p><strong>adduser git</strong></p><p>切换到git用户</p><p><strong>su git</strong></p><p><strong>2）</strong> <strong>下载gogs包并解压</strong></p><p>可以到官网下载</p><p><img src="'+n+'" alt="image-20230915101454592"></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">tar</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-zxvf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gogs_0.11.86_linux_amd64.tar.gz</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">tar</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-zxvf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gogs_0.11.86_linux_amd64.tar.gz</span></span></code></pre></div><p>解压后出现目录：</p><p><img src="'+l+'" alt="image-20230915101503838"></p><p><strong>3）</strong> <strong>导入Sql数据</strong></p><p>进入gogs目录。查看：</p><p><img src="'+i+'" alt="image-20230915101514617"></p><p>要执行的脚本就在scripts目录中：</p><p><img src="'+r+`" alt="image-20230915101523253"></p><p>执行命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">scripts</span></span>
<span class="line"><span style="color:#B392F0;">mysql</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-uroot</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mysql.sql</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">scripts</span></span>
<span class="line"><span style="color:#6F42C1;">mysql</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-uroot</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mysql.sql</span></span></code></pre></div><p>然后输入mysql密码即可</p><p><img src="`+g+'" alt="image-20230915101531793"></p><p>执行完后，对新增一个名为gogs的数据库。</p><p><img src="'+c+'" alt="image-20230915101540244"></p><p>4） <strong>创建新的数据库用户</strong></p><p>用root用户登入mysql</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">mysql </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">uroot </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">p</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">mysql </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">uroot </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">p</span></span></code></pre></div><p><img src="'+m+'" alt="image-20230915101553732"></p><p>然后执行以下命令创建gogs数据库用户</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">user</span><span style="color:#E1E4E8;"> &#39;</span><span style="color:#B392F0;">gogs</span><span style="color:#E1E4E8;">&#39;@</span><span style="color:#9ECBFF;">&#39;localhost&#39;</span><span style="color:#E1E4E8;"> identified </span><span style="color:#F97583;">by</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;gogs&#39;</span><span style="color:#E1E4E8;">; </span><span style="color:#F97583;">//</span><span style="color:#E1E4E8;">第一个gogs是用户名，第二个gogs是密码</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">create</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">user</span><span style="color:#24292E;"> &#39;</span><span style="color:#6F42C1;">gogs</span><span style="color:#24292E;">&#39;@</span><span style="color:#032F62;">&#39;localhost&#39;</span><span style="color:#24292E;"> identified </span><span style="color:#D73A49;">by</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;gogs&#39;</span><span style="color:#24292E;">; </span><span style="color:#D73A49;">//</span><span style="color:#24292E;">第一个gogs是用户名，第二个gogs是密码</span></span></code></pre></div><p><img src="'+h+'" alt="image-20230915101600674"></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">grant</span><span style="color:#E1E4E8;"> all privileges </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;"> gogs.</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;gogs&#39;</span><span style="color:#E1E4E8;">@</span><span style="color:#9ECBFF;">&#39;localhost&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">grant</span><span style="color:#24292E;"> all privileges </span><span style="color:#D73A49;">on</span><span style="color:#24292E;"> gogs.</span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;gogs&#39;</span><span style="color:#24292E;">@</span><span style="color:#032F62;">&#39;localhost&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><p><img src="'+d+'" alt="image-20230915101609086"></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">flush privileges;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">flush privileges;</span></span></code></pre></div><p><img src="'+y+'" alt="image-20230915101620248"></p><p><strong>5）</strong> <strong>运行gogs</strong></p><p>退回到gogs根目录，运行脚本：</p><p><strong>./gogs web</strong></p><p>可以看到以下信息：</p><p><img src="'+_+'" alt="image-20230915101628631"></p><p>启动成功，监听的是3000端口</p><p>gogs 后台运行：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$nohup ./gogs web &amp;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$nohup ./gogs web &amp;</span></span></code></pre></div><p><strong>6）</strong> <strong>访问管理页面</strong></p><p>在浏览器中访问：<a href="http://192.168.154.133:3000/" target="_blank" rel="noreferrer">http://192.168.154.133:3000</a></p><p>首次运行，会让我们进行一些设置：</p><p>数据库设置：</p><p><img src="'+u+'" alt="image-20230915101637558"></p><p>基本设置：</p><p><img src="'+E+'" alt="image-20230915101648404"></p><p>其它设置，可选，不设置的话需要注册新的用户信息</p><p><img src="'+b+'" alt="image-20230915101656905"></p><p>完成后，熟悉的页面出现了：</p><p><img src="'+v+'" alt="image-20230915101704871"></p><h2 id="访问远程仓库" tabindex="-1"><strong>访问远程仓库</strong> <a class="header-anchor" href="#访问远程仓库" aria-label="Permalink to &quot;**访问远程仓库**&quot;">​</a></h2><h3 id="注册并登录" tabindex="-1"><strong>注册并登录</strong> <a class="header-anchor" href="#注册并登录" aria-label="Permalink to &quot;**注册并登录**&quot;">​</a></h3><p>访问：<a href="http://192.168.50.33:10080" target="_blank" rel="noreferrer">http://192.168.50.33:10080</a></p><p><img src="'+q+'" alt="image-20230915101713472"></p><p>大家自己注册并登录：</p><p><img src="'+k+'" alt="image-20230915101722937"></p><h3 id="创建新的仓库" tabindex="-1"><strong>创建新的仓库</strong> <a class="header-anchor" href="#创建新的仓库" aria-label="Permalink to &quot;**创建新的仓库**&quot;">​</a></h3><p>在页面左侧，选择创建新的仓库</p><p><img src="'+F+'" alt="image-20230915101730480"></p><p>填写仓库信息：</p><p><img src="'+S+'" alt="image-20230915101737843"></p><p>仓库创建完毕，可以看到，如果我们要与远程仓库同步，这里支持两种不同的通信协议，<strong>ssh</strong>和<strong>http</strong>。当我们选中一种协议后，后面会出现对应的<strong>远程仓库地址</strong>。</p><p><img src="'+f+'" alt="image-20230915101753168"></p><p>具体用那种协议要看企业团队，一般用HTTP协议的比较多，因为简单。</p><p>如果处于安全一般会使用ssh协议。但是要使用SSH协议进行同步，你就必须生成SSH密钥，并添加到当前仓库的许可列表中！接下来了解下SSH协议。作为开发人员我们不需关注这个协议，重点是使用git工具进行代码的远程操作。</p><h3 id="ssh协议" tabindex="-1">SSH协议 <a class="header-anchor" href="#ssh协议" aria-label="Permalink to &quot;SSH协议&quot;">​</a></h3><h4 id="什么是ssh" tabindex="-1">什么是ssh <a class="header-anchor" href="#什么是ssh" aria-label="Permalink to &quot;什么是ssh&quot;">​</a></h4><p>​ SSH是英文Secure Shell的简写形式。通过使用SSH，你可以把所有传输的数据进行加密，相对于HTTP协议更安全。</p><p>​ 使用SSH，还有一个额外的好处就是传输的数据是经过压缩的，所以可以加快传输的速度。SSH有很多功能，它既可以代替Telnet，又可以为FTP、Pop、甚至为PPP提供一个安全的&quot;通道&quot;。</p><p>​ 如果一个用户从本地计算机，使用SSH协议登录另一台远程计算机，我们就可以认为，这种登录是安全的，即使被中途截获，密码也不会泄露。</p><p>​ 最早的时候，互联网通信都是明文通信，一旦被截获，内容就暴露无疑。1995年，芬兰学者Tatu Ylonen设计了SSH协议，将登录信息全部加密，成为互联网安全的一个基本解决方案，迅速在全世界获得推广，目前已经成为Linux系统的标准配置。</p><h4 id="创建ssh密钥" tabindex="-1"><strong>创建SSH密钥</strong> <a class="header-anchor" href="#创建ssh密钥" aria-label="Permalink to &quot;**创建SSH密钥**&quot;">​</a></h4><p>Git-bash中已经集成了ssh功能，所以我们只需要简单的命令，即可生成密钥：<strong>ssh-keygen -t rsa</strong></p><p>一路回车向下走，不要输入任何内容即可！</p><p><img src="'+C+'" alt="image-20230915101806427"></p><p>执行命令完成后,在window本地用户.ssh目录C:\\Users\\用户名.ssh下面生成如下名称的公钥和私钥:</p><p><img src="'+P+'" alt="image-20230915101813384"></p><h4 id="添加ssh密钥到git私服" tabindex="-1">添加SSH密钥到git私服 <a class="header-anchor" href="#添加ssh密钥到git私服" aria-label="Permalink to &quot;添加SSH密钥到git私服&quot;">​</a></h4><p>选择用户，个人设置：</p><p><img src="'+x+'" alt="image-20230915101823380"></p><p>点击SSH密钥设置，并添加密钥：</p><p><img src="'+H+'" alt="image-20230915101830430"></p><p>密钥的内容，就是刚刚生成的两个密钥中的公钥：<strong>id_rsa.pub</strong>,用文本编辑工具（EditPlus）打开，并且复制内容即可。</p><p><img src="'+G+'" alt="image-20230915101836194"></p><p>将这段公钥添加到用户，这就说明，这台公钥的机器具备了访问这个git账号中的远程仓库的权限！因此一定要慎重添加。不能随意让别人操作你的仓库！！</p><h3 id="推送远程仓库" tabindex="-1">推送远程仓库 <a class="header-anchor" href="#推送远程仓库" aria-label="Permalink to &quot;推送远程仓库&quot;">​</a></h3><p>通过控制面板，回到仓库页面，发现下面有一段帮助信息：</p><p><img src="'+B+'" alt="image-20230915101844415"></p><p>关联远程仓库：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">git remote add origin ssh://git@192.168.50.33:10022/fangqyou/hello-git.git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">git remote add origin ssh://git@192.168.50.33:10022/fangqyou/hello-git.git</span></span></code></pre></div><p>推送本地仓库到远程仓库的master分支：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">git push -u origin master</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">git push -u origin master</span></span></code></pre></div><p>需要注意的是：<strong>git remote add origin</strong> 后面紧跟的，其实是上面的仓库地址信息</p><p>执行命令，发现有提示信息：</p><p><img src="'+A+'" alt="image-20230915101852574"></p><p>第一次推送，会有提示信息，我们输入yes：</p><p><img src="'+D+'" alt="image-20230915101859061"></p><p>推送成功！此时登录远程仓库，刷新页面，可以看到数据已经推送，并且与本地仓库完全一致：</p><p><img src="'+T+'" alt="image-20230915101908052"></p><p>从现在起，只要本地作了提交，就可以通过命令：</p><p>git push origin master</p><p>把本地<strong>master</strong>分支的最新修改推送至GitHub，现在，你就拥有了真正的分布式版本库！</p><h3 id="克隆远程仓库" tabindex="-1"><strong>克隆远程仓库</strong> <a class="header-anchor" href="#克隆远程仓库" aria-label="Permalink to &quot;**克隆远程仓库**&quot;">​</a></h3><p>​ 现在，假设一个新的成员要加入我们的开发队伍，那他首先要做的第一件事情，一定是从远程仓库获取所有代码。此时就可以使用克隆动作。</p><p>克隆远程仓库：就是从远程把仓库复制一份到本地，克隆后会创建一个新的本地仓库。</p><p>我们随意找到一个目录D:\\test\\world:</p><p><img src="'+w+'" alt="image-20230915101916699"></p><p>打开控制台，输入命令：<strong>git</strong> <strong>clone</strong> 远程仓库地址</p><p>远程仓库地址可以在仓库页看到：</p><p><img src="'+$+'" alt="image-20230915101922898"></p><p>输入命令：</p><p><img src="'+z+'" alt="image-20230915101930512"></p><p>查看目录：</p><p><img src="'+L+'" alt="image-20230915101935742"></p><p>内容：</p><p><img src="'+I+'" alt="image-20230915101941760"></p><p>查看状态：</p><p><img src="'+N+'" alt="image-20230915101947660"></p><p>OK，你已经与远程仓库完全一致了，开始你的工作吧！</p><h3 id="拉取远程仓库数据" tabindex="-1"><strong>拉取远程仓库数据</strong> <a class="header-anchor" href="#拉取远程仓库数据" aria-label="Permalink to &quot;**拉取远程仓库数据**&quot;">​</a></h3><p>​ 现在如果有人也向远程仓库推送了代码，那么当我们就需要拉取 远程仓库的最新代码到本地：</p><p>我们可以先手动修改远程仓库数据，模拟他人的提交：</p><p><img src="'+V+'" alt="image-20230915101954601"></p><p>在本地拉取最新代码，使用<strong>git pull</strong> 命令</p><p><img src="'+O+'" alt="image-20230915102002217"></p><p>查看readme文件：</p><p><img src="'+J+'" alt="image-20230915102011612"></p><p>内容已经与远端保持一致。</p><h2 id="总结" tabindex="-1"><strong>总结</strong> <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;**总结**&quot;">​</a></h2><p>注意：</p><p>1） 如果要使用SSH协议与远程仓库同步，就必须先在本地生成公钥和私钥，然后将公钥添加到远程的SSH列表</p><p>2） 如果已经有本地仓库，并且想要与远程仓库关联，一般需要两步：</p><p>​ a) 通过<strong>git remote add origin</strong> + 远程仓库地址 进行关联</p><p>​ b) 通过<strong>git push -u origin master</strong>推送本地仓库修改到远程仓库</p><p>3） 如果没有本地仓库，先创建远程仓库，然后通过<strong>git clone</strong> + 远程仓库地址 进行克隆并创建本地仓库</p>',150),R=[Q];function U(Y,j,M,W,X,Z){return a(),p("div",null,R)}const ps=s(K,[["render",U]]);export{as as __pageData,ps as default};
